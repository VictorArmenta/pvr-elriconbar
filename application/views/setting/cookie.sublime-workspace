{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"botto",
				"padding-bottom"
			],
			[
				"text-a",
				"text-align"
			],
			[
				"bac",
				"background"
			],
			[
				"tr",
				"target\tAttr"
			],
			[
				"comme",
				"comments"
			],
			[
				"get_he",
				"get_header"
			],
			[
				"border-co",
				"border-color"
			],
			[
				"onc",
				"onclick\tAttr"
			],
			[
				"pr",
				"print"
			],
			[
				"new",
				"newWindow"
			],
			[
				"set",
				"setTimeout"
			],
			[
				"var",
				"var2"
			],
			[
				"nes",
				"news"
			],
			[
				"panel",
				"panel-default"
			],
			[
				"background-c",
				"background-color"
			],
			[
				"ticke",
				"PrintTicket"
			],
			[
				"btn",
				"btn-block"
			],
			[
				"je",
				"jQuery"
			],
			[
				"cus",
				"customer_id"
			],
			[
				"margi",
				"margin-top"
			],
			[
				"php",
				"phpversion"
			],
			[
				"publictar",
				"publicitar-en-bolivia"
			],
			[
				"_",
				"_POST"
			],
			[
				"publicitar",
				"publicitar-en-bolivia"
			],
			[
				"reset",
				"reset1"
			],
			[
				"com",
				"commentform"
			],
			[
				"chec",
				"checkurl"
			],
			[
				"img",
				"imgFoto"
			],
			[
				"unse",
				"unset"
			],
			[
				"loca",
				"location"
			],
			[
				"PUBLICI",
				"publicitar-en-bolivia"
			],
			[
				"pane",
				"panel-default"
			],
			[
				"ca",
				"califi_hasta"
			],
			[
				"cali",
				"califi_desde"
			],
			[
				"payments",
				"payment_settings"
			],
			[
				"rou",
				"routineID"
			],
			[
				"user_d",
				"user_dni"
			],
			[
				"rules",
				"rules_setting"
			],
			[
				"print",
				"print_r"
			],
			[
				"font",
				"font-family"
			],
			[
				"uni",
				"unique_dni"
			],
			[
				"notii",
				"noticias"
			],
			[
				"gasto",
				"gasto"
			],
			[
				"mie",
				"miembro"
			],
			[
				"de",
				"del"
			],
			[
				"Vis",
				"Visualizar"
			],
			[
				"A",
				"Agregar"
			],
			[
				"exa",
				"examen"
			],
			[
				"Edit",
				"Editar"
			],
			[
				"Ed",
				"Editar"
			],
			[
				"vis",
				"Visualizar"
			],
			[
				"bo",
				"Borrar"
			],
			[
				"edi",
				"Editar"
			],
			[
				"local",
				"localhost"
			],
			[
				"clas",
				"class\tclass â€¦"
			],
			[
				"conta",
				"contacto"
			],
			[
				"user",
				"user_home"
			],
			[
				"cap",
				"captcha"
			],
			[
				"cpa",
				"captcha"
			],
			[
				"po",
				"_POST"
			],
			[
				"row",
				"row_code"
			],
			[
				"id",
				"idmensaje"
			],
			[
				"a_",
				"a_mes"
			],
			[
				"codig",
				"codigo_mes"
			],
			[
				"codigo",
				"codigo_semana"
			],
			[
				"col-md",
				"col-md-12"
			],
			[
				"dire",
				"direccion"
			],
			[
				"html_",
				"HTML_DIR"
			],
			[
				"us",
				"usuarios"
			],
			[
				"ida",
				"idaviso_servicio"
			],
			[
				"aviso",
				"aviso_venta"
			],
			[
				"idav",
				"idaviso_empleo"
			],
			[
				"sty",
				"style"
			],
			[
				"mis",
				"mis-avisos"
			],
			[
				"strto",
				"strtotime"
			],
			[
				"publii",
				"publicitar-en-bolivia"
			],
			[
				"Da",
				"datos"
			],
			[
				"da",
				"datos"
			],
			[
				"lim",
				"limpiarDatos"
			],
			[
				"borde",
				"border-bottom"
			],
			[
				"video",
				"video_url"
			],
			[
				"txt",
				"txturl"
			],
			[
				"txtd",
				"txtduracion"
			],
			[
				"fecha",
				"fecha_pub"
			],
			[
				"btn_",
				"btn_nueva_publicidad"
			],
			[
				"pos",
				"post"
			],
			[
				"la",
				"label_off"
			],
			[
				"inpu",
				"input_off"
			],
			[
				"reporte",
				"reportes_servicio"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "//**************************** boton enter *****************************\n$.keyboard.keyaction.enter = function(base){\n  if (base.el.tagName === \"INPUT\") {\n    base.accept();      // accept the content\n   $('.barcode').submit(); // funcion \"function barcode()\" de pos.php envia los datos\n\n  } else {\n    base.insertText('\\r\\n'); // textarea\n  }\n};\n\n\n$('#keyboard').keyboard({\n    acceptValid: true, //habilita la posibilidad de hacer uso de \"enter\"\n    restrictInput: true, //\n    validate: function(kb, key, el) {\n        var input = \"The quick brown fox jumps over the lazy dog.\",\n            result = kb.$preview.val(),\n            len = result.length;\n        while ( !input.match( result.substring(0,len) )) {\n            len--;\n        }\n        kb.$preview.val( result.substring(0, len - 1) );\n        return true;\n    }\n});\nimg\t",
			"settings":
			{
				"buffer_size": 835,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<?php\ndate_default_timezone_set('America/La_Paz');\ndefined('BASEPATH') or exit('No direct script access allowed');\n\nclass Pos extends CI_Controller\n{\n\n    function __construct()\n    {\n        parent::__construct();\n        $lang = $this->session->userdata(\"lang\") == null ? \"english\" : $this->session->userdata(\"lang\");\n        $this->lang->load($lang, $lang);\n        $this->register = $this->session->userdata('register') ? $this->session->userdata('register') : FALSE;\n        $this->store = $this->session->userdata('store') ? $this->session->userdata('store') : FALSE;\n        $this->selectedTable = $this->session->userdata('selectedTable') ? $this->session->userdata('selectedTable') : FALSE;\n\n        $this->setting = Setting::find(1);\n        date_default_timezone_set($this->setting->timezone);\n    }\n\n    public function findproduct($code)\n    {\n        $product = Product::find('first', array(\n            'conditions' => array(\n                'code = ?',\n                $code\n            )\n        ));\n        echo $product->id;\n    }\n\n    public function openregister($id = 0, $userRole)\n    {\n        if ($_POST) {\n            $cash = $this->input->post('cash');\n            $id = $this->input->post('store');\n            $waitersCach = $this->input->post('waitersCach');\n            $waitercc = '';\n            foreach ($waitersCach as $key => $value) {\n               $waitercc .= $value ? $key.','.$value.',' : '';\n            }\n            $data = array(\n                \"status\" => 1,\n                \"user_id\" => $this->session->userdata('user_id'),\n                \"cash_inhand\" => $cash,\n                \"waiterscih\" => $waitercc,\n                \"store_id\" => $id\n            );\n            $register = Register::create($data);\n\n            $store = Store::find($id);\n            $store->status = 1;\n            $store->save();\n            $CI = & get_instance();\n            $CI->session->set_userdata('register', $register->id);\n            $CI->session->set_userdata('store', $id);\n            redirect(\"\", \"location\");\n        }\n        $open_reg = Register::find('first', array(\n            'conditions' => array(\n                'store_id = ? AND status= ?',\n                $id,\n                1\n            )\n        ));\n        $CI = & get_instance();\n        $CI->session->set_userdata('register', $open_reg->id);\n        $CI->session->set_userdata('store', $id);\n        if($userRole === 'kitchen') {\n          redirect(\"kitchens\", \"location\");\n        }else {\n          redirect(\"\", \"location\");\n        }\n    }\n\n    public function selectTable($id)\n    {\n      $hold = Hold::find('first', array('conditions' => array('register_id = ? AND table_id = ?', $this->register, $id)));\n      if(!$hold){\n         $attributes = array(\n            'number' => 1,\n            'time' => date(\"H:i\"),\n            \"table_id\" => $id,\n            'register_id' => $this->register\n         );\n         Hold::create($attributes);\n      }else{\n      Posale::update_all(array(\n            'set' => array(\n               'status' => 1\n            ),\n            'conditions' => array(\n               'number = ? AND register_id = ? AND table_id = ?',\n               1,\n               $this->register,\n               $id\n            )\n         ));\n      }\n      if($id > 0){\n\n         $table = Table::find($id);\n         if($table->status != 1){\n            $table->status = 1;\n            $table->time = date(\"H:i\");\n            $table->save();\n         }\n      }\n      $CI = & get_instance();\n      $CI->session->set_userdata('selectedTable', $id.'h');\n      redirect(\"\", \"location\");\n\n    }\n\n    public function switshregister()\n    {\n        $CI = & get_instance();\n        $CI->session->set_userdata('register', 0);\n        $CI->session->set_userdata('store', 0);\n        redirect(\"\", \"location\");\n    }\n\n    public function switshtable()\n    {\n      Posale::update_all(array(\n          'set' => array(\n             'status' => 0\n          ),\n          'conditions' => array(\n             'status = ? AND register_id = ?',\n             1,\n             $this->register\n          )\n      ));\n        $CI = & get_instance();\n        $CI->session->set_userdata('selectedTable', 0);\n        redirect(\"\", \"location\");\n    }\n\n    public function addpdc()\n    {\n      $product = Product::find($this->input->post('product_id'));\n      $PostPrice = $this->input->post('price');\n      $price = !$product->taxmethod || $product->taxmethod == '0' ? floatval($PostPrice) : floatval($PostPrice)*(1 + $product->tax / 100);\n      /******************************************* sock version *************************************************************/\n      if($product->type == '0')\n      {\n         $register = Register::find($this->register);\n         $stock = Stock::find('first', array('conditions' => array('store_id = ? AND product_id = ?', $register->store_id, $this->input->post('product_id'))));\n         $quantity = $stock ? $stock->quantity : 0;\n        $posale = Posale::find('first', array(\n            'conditions' => array(\n                'status = ? AND register_id = ? AND product_id = ? AND table_id = ?',\n                1,\n                $this->register,\n                $this->input->post('product_id'),\n                $this->selectedTable\n            )\n        ));\n        if ($posale) {\n           if($posale->qt < $quantity) {\n            $posale->qt ++;\n            $posale->time = date(\"Y-m-d H:i:s\");\n            $posale->save();\n            echo json_encode(array(\n                \"status\" => TRUE\n            ));\n         }else {\n            echo 'stock';\n         }\n      } else if($quantity != 0){\n            $data = array(\n                \"product_id\" => $this->input->post('product_id'),\n                \"name\" => $this->input->post('name'),\n                \"price\" => $price,\n                \"number\" => $this->input->post('number'),\n                \"register_id\" => $this->input->post('registerid'),\n                \"table_id\" => $this->selectedTable,\n                \"qt\" => 1,\n                \"status\" => 1,\n                \"time\" => date(\"Y-m-d H:i:s\")\n            );\n            Posale::create($data);\n            echo json_encode(array(\n                \"status\" => TRUE\n            ));\n        }else {\n           echo 'stock';\n        }\n       /******************************************* combo version *************************************************************/\n     }elseif ($product->type == '2') {\n        $posale = Posale::find('first', array(\n           'conditions' => array(\n             'status = ? AND register_id = ? AND product_id = ? AND table_id = ?',\n             1,\n             $this->register,\n             $this->input->post('product_id'),\n             $this->selectedTable\n          )\n       ));\n        $register = Register::find($this->register);\n        $quantity = 1;\n        $combos = Combo_item::find('all', array('conditions' => array('product_id = ?', $this->input->post('product_id'))));\n        foreach ($combos as $combo) {\n           $prd = Product::find($combo->item_id);\n           if($prd->type == '0'){\n               $stock = Stock::find('first', array('conditions' => array('store_id = ? AND product_id = ?', $register->store_id, $combo->item_id)));\n               if ($posale)\n                  $diff = $stock ? ($stock->quantity - $combo->quantity*($posale->qt+1)) : 1;\n               else\n                 $diff = $stock ? ($stock->quantity - $combo->quantity) : 1;\n              $quantity = $stock ? ($diff >= 0 ? 1 : 0) : $quantity;\n           }\n        }\n      if ($posale) {\n          if($quantity > 0) {\n           $posale->qt ++;\n           $posale->time = date(\"Y-m-d H:i:s\");\n           $posale->save();\n           echo json_encode(array(\n               \"status\" => TRUE\n           ));\n        }else {\n           echo 'stock';\n        }\n     } elseif($quantity > 0){\n           $data = array(\n               \"product_id\" => $this->input->post('product_id'),\n               \"name\" => $this->input->post('name'),\n               \"price\" => $price,\n               \"number\" => $this->input->post('number'),\n               \"register_id\" => $this->input->post('registerid'),\n               \"table_id\" => $this->selectedTable,\n               \"qt\" => 1,\n               \"status\" => 1,\n               \"time\" => date(\"Y-m-d H:i:s\")\n           );\n           Posale::create($data);\n           echo json_encode(array(\n               \"status\" => TRUE\n           ));\n      }else {\n          echo 'stock';\n      }\n     }\n     /******************************************* service version *************************************************************/\n     else {\n        $posale = Posale::find('first', array(\n            'conditions' => array(\n                'status = ? AND register_id = ? AND product_id = ? AND table_id = ?',\n                1,\n                $this->register,\n                $this->input->post('product_id'),\n                $this->selectedTable\n            )\n        ));\n        if ($posale) {\n            $posale->qt ++;\n            $posale->time = date(\"Y-m-d H:i:s\");\n            $posale->save();\n            echo json_encode(array(\n                \"status\" => TRUE\n            ));\n        } else {\n            $data = array(\n                \"product_id\" => $this->input->post('product_id'),\n                \"name\" => $this->input->post('name'),\n                \"price\" => $price,\n                \"number\" => $this->input->post('number'),\n                \"register_id\" => $this->input->post('registerid'),\n                \"table_id\" => $this->selectedTable,\n                \"qt\" => 1,\n                \"status\" => 1,\n                \"time\" => date(\"Y-m-d H:i:s\")\n            );\n            Posale::create($data);\n            echo json_encode(array(\n                \"status\" => TRUE\n            ));\n        }\n     }\n    }\n\n    public function load_posales()\n    {\n        $setting = Setting::find(1, array(\n            'select' => 'currency'\n        ));\n        $posales = Posale::find('all', array(\n            'conditions' => array(\n                'status = ? AND register_id = ? AND table_id = ?',\n                1,\n                $this->register,\n                $this->selectedTable\n            )\n        ));\n        $data = '';\n        if ($posales) {\n            foreach ($posales as $posale) {\n               $alertqt = Product::find($posale->product_id)->alertqt;\n               $type = Product::find($posale->product_id)->type;\n               $options = $posale->options;\n               $options = trim($options, \",\");\n               $storeid = Register::find($this->register)->store_id;\n               $alert = $type == '0' ? (Stock::find('first', array('conditions' => array('product_id = ? AND store_id = ?', $posale->product_id, $storeid)))->quantity - $posale->qt <= $alertqt ? 'background-color:pink' : '') : '';\n                $row = '<div class=\"col-xs-12\"><div class=\"panel panel-default product-details\"><div class=\"panel-body\" style=\"'.$alert.'\">\n                <div class=\"col-xs-5 nopadding\">\n                <div class=\"col-xs-2 nopadding\">\n                <a href=\"javascript:void(0)\" onclick=\"delete_posale(' . \"'\" . $posale->id . \"'\" . ')\">\n                <span class=\"fa-stack fa-sm productD\">\n                <i class=\"fa fa-circle fa-stack-2x delete-product\"></i>\n                <i class=\"fa fa-times fa-stack-1x fa-fw fa-inverse\"></i></span></a></div>\n                <div class=\"col-xs-10 nopadding\"><span class=\"textPD\">' . $posale->name . '</span></div></div><div class=\"col-xs-2\"><span class=\"textPD\">' . number_format((float)$posale->price, $this->setting->decimals, '.', '') . '</span></div>\n                <div class=\"col-xs-3 nopadding productNum\">\n                <a href=\"javascript:void(0)\"><span class=\"fa-stack fa-sm decbutton\"><i class=\"fa fa-square fa-stack-2x light-grey\"></i><i class=\"fa fa-minus fa-stack-1x fa-inverse white\"></i></span></a><input type=\"text\" id=\"qt-' . $posale->id . '\" onchange=\"edit_posale(' . $posale->id . ')\" class=\"form-control\" value=\"' . $posale->qt . '\" placeholder=\"0\" maxlength=\"3\"><a href=\"javascript:void(0)\">\n                <span class=\"fa-stack fa-sm incbutton\">\n                <i class=\"fa fa-square fa-stack-2x light-grey\"></i>\n                <i class=\"fa fa-plus fa-stack-1x fa-inverse white\"></i>\n                </span></a></div>\n                <div class=\"col-xs-2 nopadding \">\n                <span class=\"subtotal textPD\">' . number_format((float)$posale->price*$posale->qt, $this->setting->decimals, '.', '') . '  ' . $setting->currency . '</span>\n                </div>\n                </div>\n                <button type=\"button\" onclick=\"addoptions('.$posale->product_id.', '.$posale->id.')\" class=\"btn btn-success btn-xs\">'.label(\"Options\").'</button> \n                <span id=\"pooptions-'.$posale->id.'\"> '.$options.'</sapn>\n                </div>\n                </div>';\n\n                $data .= $row;\n            }\n            // adding script for the +/- buttons\n            $data .= '<script type=\"text/javascript\">$(\".incbutton\").on(\"click\", function() {var $button = $(this);var oldValue = $button.parent().parent().find(\"input\").val();var newVal = parseFloat(oldValue) + 1;$button.parent().parent().find(\"input\").val(newVal);edit_posale($button.parent().parent().find(\"input\").attr(\"id\").slice(3));});$(\".decbutton\").on(\"click\", function() {var $button = $(this);var oldValue = $button.parent().parent().find(\"input\").val();if (oldValue > 1) {var newVal = parseFloat(oldValue) - 1;} else {newVal = 1;}$button.parent().parent().find(\"input\").val(newVal);edit_posale($button.parent().parent().find(\"input\").attr(\"id\").slice(3));});</script>';\n        } else {\n\n            $data = '<div class=\"messageVide\">' . label(\"EmptyList\") . ' <span>(' . label(\"SelectProduct\") . ')</span></div>';\n        }\n        echo $data;\n    }\n\n    public function delete($id)\n    {\n        $posale = Posale::find($id);\n        $posale->delete();\n        echo json_encode(array(\n            \"status\" => TRUE\n        ));\n    }\n\n    public function edit($id)\n    {\n        $posale = Posale::find($id);\n        $product = Product::find($posale->product_id);\n       if($product->type == '0'){\n          $register = Register::find($this->register);\n          $stock = Stock::find('first', array('conditions' => array('store_id = ? AND product_id = ?', $register->store_id, $posale->product_id)));\n          $quantity = $stock ? $stock->quantity : 0;\n          if(intval($this->input->post('qt')) <= intval($quantity)) {\n\n             $data = array(\n                 \"qt\" => $this->input->post('qt'),\n                 \"time\" => date('Y-m-d H:i:s')\n             );\n             $posale->update_attributes($data);\n             echo json_encode(array(\n                 \"status\" => TRUE\n             ));\n\n        }else {\n           echo 'stock';\n        }\n    /******************************************* combo version *************************************************************/\n   }elseif ($product->type == '2') {\n     $register = Register::find($this->register);\n     $quantity = 1;\n     $combos = Combo_item::find('all', array('conditions' => array('product_id = ?', $posale->product_id)));\n     foreach ($combos as $combo) {\n         $prd = Product::find($combo->item_id);\n         if($prd->type == '0'){\n             $stock = Stock::find('first', array('conditions' => array('store_id = ? AND product_id = ?', $register->store_id, $combo->item_id)));\n            $diff = $stock ? ($stock->quantity - $combo->quantity*($this->input->post('qt'))) : 1;\n            $quantity = $stock ? ($diff >= 0 ? 1 : 0) : $quantity;\n         }\n     }\n        if($quantity > 0) {\n           $data = array(\n              \"qt\" => $this->input->post('qt'),\n              \"time\" => date('Y-m-d H:i:s')\n          );\n          $posale->update_attributes($data);\n          echo json_encode(array(\n              \"status\" => TRUE\n          ));\n     }else {\n         echo 'stock';\n     }\n   }else {\n        $data = array(\n            \"qt\" => $this->input->post('qt'),\n            \"time\" => date('Y-m-d H:i:s')\n        );\n        $posale->update_attributes($data);\n        echo json_encode(array(\n            \"status\" => TRUE\n        ));\n     }\n\n    }\n\n    public function subtot()\n    {\n        $posales = Posale::find('all', array(\n            'conditions' => array(\n                'status = ? AND register_id = ? AND table_id = ?',\n                1,\n                $this->register,\n                $this->selectedTable\n            )\n        ));\n        $sub = 0;\n        foreach ($posales as $posale) {\n            $sub += $posale->price * $posale->qt;\n        }\n        echo number_format((float)$sub, $this->setting->decimals, '.', '');\n    }\n\n    public function totiems()\n    {\n        $posales = Posale::find('all', array(\n            'conditions' => array(\n                'status = ? AND register_id = ? AND table_id = ?',\n                1,\n                $this->register,\n                $this->selectedTable\n            )\n        ));\n        $sub = 0;\n        foreach ($posales as $posale) {\n            $sub += $posale->qt;\n        }\n        echo $sub;\n    }\n\n    public function GetDiscount($id)\n    {\n        $customer = Customer::find($id);\n        $Discount = stripos($customer->discount, '%') > 0 ? $customer->discount : number_format((float)$customer->discount, $this->setting->decimals, '.', '');\n        echo $Discount . '~' . $customer->name;\n    }\n\n    public function ResetPos()\n    {\n        Posale::delete_all(array(\n            'conditions' => array(\n                'status = ? AND register_id = ?',\n                1,\n                $this->register\n            )\n        ));\n        echo json_encode(array(\n            \"status\" => TRUE\n        ));\n    }\n\n    public function AddNewSale($type)\n    {\n        date_default_timezone_set($this->setting->timezone);\n        $date = date(\"Y-m-d H:i:s\");\n        $_POST['created_at'] = $date;\n        $_POST['register_id'] = $this->register;\n        $register = Register::find($this->register);\n        $store = Store::find($register->store_id);\n        if ($type == 2) {\n            try {\n                Stripe::setApiKey($this->setting->stripe_secret_key);\n                $myCard = array(\n                    'number' => $this->input->post('ccnum'),\n                    'exp_month' => $this->input->post('ccmonth'),\n                    'exp_year' => $this->input->post('ccyear'),\n                    \"cvc\" => $this->input->post('ccv')\n                );\n                $charge = Stripe_Charge::create(array(\n                    'card' => $myCard,\n                    'amount' => (floatval($this->input->post('paid')) * 100),\n                    'currency' => $this->setting->currency\n                ));\n                echo \"<p class='bg-success text-center'>\" . label('saleStripesccess') . '</p>';\n            } catch (Stripe_CardError $e) {\n                // Since it's a decline, Stripe_CardError will be caught\n                $body = $e->getJsonBody();\n                $err = $body['error'];\n                echo \"<p class='bg-danger text-center'>\" . $err['message'] . '</p>';\n            }\n        }\n        unset($_POST['ccnum']);\n        unset($_POST['ccmonth']);\n        unset($_POST['ccyear']);\n        unset($_POST['ccv']);\n        $paystatus = $_POST['paid'] - $_POST['total'];\n        $_POST['firstpayement'] = $paystatus > 0 ? $_POST['total'] : $_POST['paid'];\n        $sale = Sale::create($_POST);\n        $posales = Posale::find('all', array(\n            'conditions' => array(\n                'status = ? AND register_id = ? AND table_id = ?',\n                1,\n                $this->register,\n                $this->selectedTable\n            )\n        ));\n        foreach ($posales as $posale) {\n            $data = array(\n                \"product_id\" => $posale->product_id,\n                \"name\" => $posale->name,\n                \"price\" => $posale->price,\n                \"qt\" => $posale->qt,\n                \"subtotal\" => $posale->qt * $posale->price,\n                \"sale_id\" => $sale->id,\n                \"date\" => $date\n            );\n            $number = $posale->number;\n            $register = Register::find($this->register);\n            $prod = Product::find($posale->product_id);\n            if($prod->type == \"2\"){\n            /****************************************** combo case *************************************************************/\n            $combos = Combo_item::find('all', array('conditions' => array('product_id = ?', $posale->product_id)));\n            foreach ($combos as $combo) {\n               $prd = Product::find($combo->item_id);\n               if($prd->type == '0'){\n                  $stock = Stock::find('first', array('conditions' => array('store_id = ? AND product_id = ?', $register->store_id, $combo->item_id)));\n                  $stock->quantity = $stock->quantity - ($combo->quantity*$posale->qt);\n                  $stock->save();\n               }\n            }\n            /*******************************************************************************************************/\n         }else if($prod->type == \"0\"){\n            $stock = Stock::find('first', array('conditions' => array('store_id = ? AND product_id = ?', $register->store_id, $posale->product_id)));\n            $stock->quantity = $stock->quantity - $posale->qt;\n            $stock->save();\n         }\n            $pos = Sale_item::create($data);\n        }\n\n        $ticket = '<div class=\"col-md-12\">\n        <div class=\"text-center\">' . $this->setting->receiptheader . '</div>\n        <div style=\"clear:both;\">\n        <h4 class=\"text-center\">' . label(\"SaleNum\") . '.: ' . sprintf(\"%05d\", $sale->id) . '</h4> \n        <div style=\"clear:both;\"></div>\n        <span class=\"float-left\">' . label(\"Date\") . ': ' . $sale->created_at->format('d-m-Y H:i:s') . '</span><br><div style=\"clear:both;\">\n        <span class=\"float-left\">' . label(\"Customer\") . ': ' . $sale->clientname . '</span>\n        <div style=\"clear:both;\">\n        <table class=\"table\" cellspacing=\"0\" border=\"0\">\n        <thead><tr><th><em>#</em>\n        </th>\n        <th>' . label(\"Product\") . '</th><th>' . label(\"Quantity\") . '</th><th>' . label(\"SubTotal\") . '</th></tr></thead><tbody>';\n\n        $i = 1;\n        foreach ($posales as $posale) {\n            $ticket .= '<tr><td style=\"text-align:center; width:30px;\">' . $i . '</td><td style=\"text-align:left; width:180px;\">' . $posale->name . '</td><td style=\"text-align:center; width:50px;\">' . $posale->qt . '</td><td style=\"text-align:right; width:70px; \">' . number_format((float)($posale->qt * $posale->price), $this->setting->decimals, '.', '') . ' ' . $this->setting->currency . '</td></tr>';\n            $i ++;\n        }\n\n        $bcs = 'code128';\n        $height = 20;\n        $width = 3;\n        $ticket .= '</tbody></table><table class=\"table\" cellspacing=\"0\" border=\"0\" style=\"margin-bottom:8px;\"><tbody><tr><td style=\"text-align:left;\">' . label(\"TotalItems\") . '</td><td style=\"text-align:right; padding-right:1.5%;\">' . $sale->totalitems . '</td><td style=\"text-align:left; padding-left:1.5%;\">' . label(\"Total\") . '</td><td style=\"text-align:right;font-weight:bold;\">' . $sale->subtotal . ' ' . $this->setting->currency . '</td></tr>';\n        if (intval($sale->discount))\n            $ticket .= '<tr><td style=\"text-align:left; padding-left:1.5%;\"></td>\n          <td style=\"text-align:right;font-weight:bold;\"></td>\n          <td style=\"text-align:left;\">' . label(\"Discount\") . '</td>\n          <td style=\"text-align:right; padding-right:1.5%;font-weight:bold;\">' . $sale->discount . '</td></tr>';\n        if (intval($sale->tax))\n            $ticket .= '<tr><td style=\"text-align:left;\"></td>\n          <td style=\"text-align:right; padding-right:1.5%;font-weight:bold;\"></td>\n          <td style=\"text-align:left; padding-left:1.5%;\">' . label(\"tax\") . '</td>\n          <td style=\"text-align:right;font-weight:bold;\">' . $sale->tax . '</td></tr>';\n        $ticket .= '<tr><td colspan=\"2\" style=\"text-align:left; font-weight:bold; padding-top:5px;\">' . label(\"GrandTotal\") . '</td><td colspan=\"2\" style=\"border-top:1px dashed #000; padding-top:5px; text-align:right; font-weight:bold;\">' . number_format((float)$sale->total, $this->setting->decimals, '.', '') . ' ' . $this->setting->currency . '</td></tr><tr>';\n\n        $PayMethode = explode('~', $sale->paidmethod);\n\n        switch ($PayMethode[0]) {\n            case '1': // case Credit Card\n                $ticket .= '<td colspan=\"2\" style=\"text-align:left; font-weight:bold; padding-top:5px;\">' . label(\"CreditCard\") . '</td>\n                <td colspan=\"2\" style=\"padding-top:5px; text-align:right; font-weight:bold;\">xxxx xxxx xxxx ' . substr($PayMethode[1], - 4) . '</td>\n                </tr>\n                <tr><td colspan=\"2\" style=\"text-align:left; font-weight:bold; padding-top:5px;\">' . label(\"CreditCardHold\") . '</td>\n                <td colspan=\"2\" style=\"padding-top:5px; text-align:right; font-weight:bold;\">' . $PayMethode[2] . '</td></tr></tbody></table>';\n                break;\n            case '2': // case ckeck\n                $ticket .= '<td colspan=\"2\" style=\"text-align:left; font-weight:bold; padding-top:5px;\">' . label(\"ChequeNum\") . '</td><td colspan=\"2\" style=\"padding-top:5px; text-align:right; font-weight:bold;\">' . $PayMethode[1] . '</td></tr></tbody></table>';\n                break;\n            default:\n                $ticket .= '<td colspan=\"2\" style=\"text-align:left; font-weight:bold; padding-top:5px;\">' . label(\"Paid\") . '</td>\n                <td colspan=\"2\" style=\"padding-top:5px; text-align:right; font-weight:bold;\">' . number_format((float)$sale->paid, $this->setting->decimals, '.', '') . ' ' . $this->setting->currency . '</td></tr><tr>\n                <td colspan=\"2\" style=\"text-align:left; font-weight:bold; padding-top:5px;\">' . label(\"Change\") . '</td><td colspan=\"2\" style=\"padding-top:5px; text-align:right; font-weight:bold;\">' . number_format((float)(floatval($sale->paid) - floatval($sale->total)), $this->setting->decimals, '.', '') . ' ' . $this->setting->currency . '</td>\n                </tr>\n                </tbody>\n                </table>';\n        }\n\n        $ticket .= '<div style=\"border-top:1px solid #000; padding-top:10px;\"><span class=\"float-left\">' . $store->name . '</span><span class=\"float-right\">' . label(\"Tel\") . ' ' . ($store->phone ? $store->phone : $this->setting->phone) . '</span><div style=\"clear:both;\"><center><img style=\"margin-top:30px\" src=\"' . site_url('pos/GenerateBarcode/' . sprintf(\"%05d\", $sale->id) . '/' . $bcs . '/' . $height . '/' . $width) . '\" alt=\"' . $sale->id . '\" /></center><p class=\"text-center\" style=\"margin:0 auto;margin-top:10px;\">' . $store->footer_text . '</p><div class=\"text-center\" style=\"background-color:#bdc3c7;padding:5px;width:85%;color:#fff;margin:0 auto;border-radius:3px;margin-top:20px;\">' . $this->setting->receiptfooter . '</div></div>';\n\n        Posale::delete_all(array(\n            'conditions' => array(\n                'status = ? AND register_id = ? AND table_id = ?',\n                1,\n                $this->register,\n                rtrim($this->selectedTable, \"h\")\n            )\n        ));\n        if (isset($number)) {\n            if ($number != 1)\n                Hold::delete_all(array(\n                    'conditions' => array(\n                        'number = ? AND register_id = ? AND table_id = ?',\n                        $number,\n                        $this->register,\n                        rtrim($this->selectedTable, \"h\")\n                    )\n                ));\n        }\n        $hold = Hold::find('last', array(\n            'conditions' => array(\n                'register_id = ? AND table_id = ?',\n                $this->register,\n                $this->selectedTable\n            )\n        ));\n        if ($hold) {\n            Posale::update_all(array(\n                'set' => array(\n                    'status' => 1\n                ),\n                'conditions' => array(\n                    'number = ? AND register_id = ? AND table_id = ?',\n                    $hold->number,\n                    $this->register,\n                    rtrim($this->selectedTable, \"h\")\n                )\n            ));\n        }\n        echo $ticket;\n    }\n\n    function GenerateBarcode($code = NULL, $bcs = 'code128', $height = 60, $width = 1)\n    {\n        $this->load->library('zend');\n        $this->zend->load('Zend/Barcode');\n        $barcodeOptions = array(\n            'text' => $code,\n            'barHeight' => $height,\n            'barThinWidth' => $width,\n            'drawText' => FALSE\n        );\n        $rendererOptions = array(\n            'imageType' => 'png',\n            'horizontalPosition' => 'center',\n            'verticalPosition' => 'middle'\n        );\n        $imageResource = Zend_Barcode::render($bcs, 'image', $barcodeOptions, $rendererOptions);\n        return $imageResource;\n    }\n\n    // ******************************************************** hold functions\n    public function holdList($registerid)\n    {\n        $holds = Hold::find('all', array(\n            'conditions' => array(\n                'register_id = ? AND table_id = ?',\n                $registerid,\n                $this->selectedTable\n            ),\n            'order' => 'number asc'\n        ));\n        $posale = Posale::find('last', array(\n            'conditions' => array(\n                'status = ? AND register_id = ? AND table_id = ?',\n                1,\n                $this->register,\n                $this->selectedTable\n            )\n        ));\n        $Tholds = '';\n        if (empty($holds))\n            $Tholds = '<span class=\"Hold selectedHold\">1<span id=\"Time\">' . date(\"H:i\") . '</span></span>';\n        else {\n            if (empty($posale)) {\n                $numItems = count($holds);\n                $i = 0;\n                foreach ($holds as $hold) {\n                    if (++ $i === $numItems)\n                        $Tholds .= '<span class=\"Hold selectedHold\" id=\"' . $hold->number . '\"  onclick=\"SelectHold(' . $hold->number . ')\">' . $hold->number . '<span id=\"Time\">' . $hold->time . '</span></span>';\n                    else\n                        $Tholds .= '<span class=\"Hold\" id=\"' . $hold->number . '\"  onclick=\"SelectHold(' . $hold->number . ')\">' . $hold->number . '<span id=\"Time\">' . $hold->time . '</span></span>';\n                }\n            } else {\n                foreach ($holds as $hold) {\n                    if ($hold->number == $posale->number)\n                        $selected = 'selectedHold';\n                    else\n                        $selected = '';\n                    $Tholds .= '<span class=\"Hold ' . $selected . '\" id=\"' . $hold->number . '\" onclick=\"SelectHold(' . $hold->number . ')\">' . $hold->number . '<span id=\"Time\">' . $hold->time . '</span></span>';\n                }\n            }\n        }\n        echo $Tholds;\n    }\n\n    public function AddHold($registerid)\n    {\n        $hold = Hold::find('last', array(\n            'conditions' => array(\n                'register_id = ? AND table_id = ?',\n                $registerid,\n                $this->selectedTable\n            )\n        ));\n        $number = ! empty($hold) ? intval($hold->number) + 1 : 1;\n        Posale::update_all(array(\n            'set' => array(\n                'status' => 0\n            ),\n            'conditions' => array(\n                'status = ? AND register_id = ?',\n                1,\n                $this->register\n            )\n        ));\n        $attributes = array(\n            'number' => $number,\n            'time' => date(\"H:i\"),\n            'register_id' => $registerid,\n            'table_id' => $this->selectedTable\n        );\n        Hold::create($attributes);\n        echo json_encode(array(\n            \"status\" => TRUE\n        ));\n    }\n\n    public function RemoveHold($number, $registerid)\n    {\n        $hold = Hold::find('first', array(\n            'conditions' => array(\n                'number = ? AND register_id = ? AND table_id = ?',\n                $number,\n                $registerid,\n                $this->selectedTable\n            )\n        ));\n        $hold->delete();\n        Posale::delete_all(array(\n            'conditions' => array(\n                'number = ? AND register_id = ?',\n                $number,\n                $registerid\n            )\n        ));\n        $hold = Hold::find('last', array(\n            'conditions' => array(\n                'register_id = ? AND table_id = ?',\n                $registerid,\n                $this->selectedTable\n            )\n        ));\n        Posale::update_all(array(\n            'set' => array(\n                'status' => 1\n            ),\n            'conditions' => array(\n                'number = ? AND register_id = ?',\n                $hold->number,\n                $registerid\n            )\n        ));\n        echo json_encode(array(\n            \"status\" => TRUE\n        ));\n    }\n\n    public function SelectHold($number)\n    {\n        Posale::update_all(array(\n            'set' => array(\n                'status' => 0\n            ),\n            'conditions' => array(\n                'status = ? AND register_id = ?',\n                1,\n                $this->register\n            )\n        ));\n        Posale::update_all(array(\n            'set' => array(\n                'status' => 1\n            ),\n            'conditions' => array(\n                'number = ? AND register_id = ?',\n                $number,\n                $this->register\n            )\n        ));\n        echo json_encode(array(\n            \"status\" => TRUE\n        ));\n    }\n\n    /**\n     * ****************** register functions ***************\n     */\n     public function CloseRegister()\n     {\n         $register = Register::find($this->register);\n         $user = User::find($register->user_id);\n         $sales = Sale::find('all', array(\n             'conditions' => array(\n                 'register_id = ?',\n                 $this->register\n             )\n         ));\n         $payaments = Payement::find('all', array(\n             'conditions' => array(\n                 'register_id = ?',\n                 $this->register\n             )\n         ));\n\n         $waiters = Waiter::find('all', array('conditions' => array('store_id = ?', $register->store_id)));\n\n         $cash = 0;\n         $cheque = 0;\n         $cc = 0;\n         $CashinHand = $register->cash_inhand;\n         $date = $register->date;\n         $createdBy = $user->firstname . ' ' . $user->lastname;\n\n         foreach ($payaments as $payament) {\n            $PayMethode = explode('~', $payament->paidmethod);\n            switch ($PayMethode[0]) {\n                case '1': // case Credit Card\n                    $cc += $payament->paid;\n                    break;\n                case '2': // case ckeck\n                    $cheque += $payament->paid;\n                    break;\n                default:\n                    $cash += $payament->paid;\n            }\n        }\n\n         foreach ($sales as $sale) {\n             $PayMethode = explode('~', $sale->paidmethod);\n             $paystatus = $sale->paid - $sale->total;\n             switch ($PayMethode[0]) {\n                 case '1': // case Credit Card\n                     $cc += $paystatus > 0 ? $sale->total : $sale->firstpayement;\n                     break;\n                 case '2': // case ckeck\n                     $cheque += $paystatus > 0 ? $sale->total : $sale->firstpayement;\n                     break;\n                 default:\n                     $cash += $paystatus > 0 ? $sale->total : $sale->firstpayement;\n             }\n         }\n         $data = '<div class=\"col-md-3\"><blockquote><footer>' . label(\"Openedby\") . '</footer><p>' . $createdBy . '</p></blockquote></div\n         ><div class=\"col-md-3\">\n         <blockquote><footer>' . label(\"CashinHand\") . '</footer><p>' . number_format((float)$CashinHand, $this->setting->decimals, '.', '') . ' ' . $this->setting->currency . '</p>\n         </blockquote></div><div class=\"col-md-4\">\n         <blockquote><footer>' . label(\"Openingtime\") . '</footer>\n         <p>' . $date->format('Y-m-d h:i:s') . '</p></blockquote>\n         </div>\n         <div class=\"col-md-2\"><img src=\"' . site_url() . '/assets/img/register.svg\" alt=\"\"></div>\n         <h2>' . label(\"PaymentsSummary\") . '</h2>\n         <table class=\"table table-striped\"><tr>\n         <th width=\"25%\">' . label(\"PayementType\") . '</th>\n         <th width=\"25%\">' . label(\"EXPECTED\") . ' (' . $this->setting->currency . ')</th>\n         <th width=\"25%\">' . label(\"COUNTED\") . ' (' . $this->setting->currency . ')</th>\n         <th width=\"25%\">' . label(\"DIFFERENCES\") . ' (' . $this->setting->currency . ')</th></tr><tr>\n         <td>' . label(\"Cash\") . '</td>\n         <td>\n         <span id=\"expectedcash\">' . number_format((float)$cash, $this->setting->decimals, '.', '') . '</span>\n         </td><td><input type=\"text\" class=\"total-input\" value=\"' . number_format((float)$cash, $this->setting->decimals, '.', '') . '\" placeholder=\"0.00\"  maxlength=\"11\" id=\"countedcash\">\n         </td><td><span id=\"diffcash\">0.00</span></td></tr>\n         <tr><td>' . label(\"CreditCard\") . '</td><td>\n         <span id=\"expectedcc\">' . number_format((float)$cc, $this->setting->decimals, '.', '') . '</span></td>\n         <td>\n         <input type=\"text\" class=\"total-input\" value=\"' . number_format((float)$cc, $this->setting->decimals, '.', '') . '\" placeholder=\"0.00\"  maxlength=\"11\" id=\"countedcc\"></td>\n         <td>\n         <span id=\"diffcc\">0.00</span></td></tr><tr><td>' . label(\"Cheque\") . '</td>\n         <td>\n         <span id=\"expectedcheque\">' . number_format((float)$cheque, $this->setting->decimals, '.', '') . '</span></td>\n         <td><input type=\"text\" class=\"total-input\" value=\"' . number_format((float)$cheque, $this->setting->decimals, '.', '') . '\" placeholder=\"0.00\"  maxlength=\"11\" id=\"countedcheque\"></td>\n         <td><span id=\"diffcheque\">0.00</span></td></tr><tr class=\"warning\">\n         <td>' . label(\"Total\") . '</td><td><span id=\"total\">' . number_format((float)($cheque + $cash + $cc), $this->setting->decimals, '.', '') . '</span></td>\n         <td>\n         <span id=\"countedtotal\">' . number_format((float)($cheque + $cash + $cc), $this->setting->decimals, '.', '') . '</span></td>\n         <td><span id=\"difftotal\">0.00</span></td></tr></table>';\n\n         foreach ($waiters as $waiter) {\n            $cih = explode(',', trim($register->waiterscih, \",\"));\n            $cachin = 0;\n            for($i = 0; $i < sizeof($cih); $i += 2){if($cih[$i] == $waiter->id){$cachin = $cih[$i+1];}}\n            $cashw = 0;\n            $chequew = 0;\n            $ccw = 0;\n            foreach ($payaments as $payament) {\n               if($payament->waiter_id == $waiter->id){\n                  $PayMethode = explode('~', $payament->paidmethod);\n                  switch ($PayMethode[0]) {\n                      case '1': // case Credit Card\n                          $ccw += $payament->paid;\n                          break;\n                      case '2': // case ckeck\n                          $chequew += $payament->paid;\n                          break;\n                      default:\n                          $cashw += $payament->paid;\n                  }\n               }\n           }\n            foreach ($sales as $sale) {\n               if($sale->waiter_id == $waiter->id){\n                   $PayMethode = explode('~', $sale->paidmethod);\n                   $paystatus = $sale->paid - $sale->total;\n                   switch ($PayMethode[0]) {\n                       case '1': // case Credit Card\n                           $ccw += $paystatus > 0 ? $sale->total : $sale->firstpayement;\n                           break;\n                       case '2': // case ckeck\n                           $chequew += $paystatus > 0 ? $sale->total : $sale->firstpayement;\n                           break;\n                       default:\n                           $cashw += $paystatus > 0 ? $sale->total : $sale->firstpayement;\n                   }\n               }\n            }\n            $Wtotal = $ccw + $chequew + $cashw + $cachin;\n            $data .= '<div class=\"waitercount\"><ul><li><h4>'.$waiter->name.' :</h4></li><li><b>' . label(\"CashinHand\") . ' : </b>' . number_format((float)$cachin, $this->setting->decimals, '.', '') . ' ' . $this->setting->currency . '</li><li><b>' . label(\"Cash\") . ' : </b>' . number_format((float)$cashw, $this->setting->decimals, '.', '') . ' ' . $this->setting->currency . '</li><li><b>' . label(\"CreditCard\") . ' : </b>' . number_format((float)$ccw, $this->setting->decimals, '.', '') . ' ' . $this->setting->currency . '</li><li><b>' . label(\"Cheque\") . ' : </b>' . number_format((float)$chequew, $this->setting->decimals, '.', '') . ' ' . $this->setting->currency . '</li></ul><div style=\"clear:both;\"></div><div class=\"wtotal\"><h3>' . label(\"Total\") . ' : ' . number_format((float)$Wtotal, $this->setting->decimals, '.', '') . '</h3></div></div>';\n         }\n\n         $data .= '<div  class=\"form-group\"><h2>' . label(\"note\") . '</h2><textarea id=\"RegisterNote\" class=\"form-control\" rows=\"3\"></textarea></div>';\n\n         echo $data;\n     }\n\n    public function SubmitRegister()\n    {\n        date_default_timezone_set($this->setting->timezone);\n        $date = date(\"Y-m-d H:i:s\");\n        $data = array(\n            \"cash_total\" => $this->input->post('expectedcash'),\n            \"cash_sub\" => $this->input->post('countedcash'),\n            \"cc_total\" => $this->input->post('expectedcc'),\n            \"cc_sub\" => $this->input->post('countedcc'),\n            \"cheque_total\" => $this->input->post('expectedcheque'),\n            \"cheque_sub\" => $this->input->post('countedcheque'),\n            \"note\" => $this->input->post('RegisterNote'),\n            \"closed_by\" => $this->session->userdata('user_id'),\n            \"closed_at\" => $date,\n            \"status\" => 0\n        );\n\n        $Register = Register::find($this->register);\n\n        $store = Store::find($Register->store_id);\n        $store->status = 0;\n        $store->save();\n\n        $tables = Table::find('all', array('conditions' => array('store_id = ?', $Register->store_id)));\n        foreach ($tables as $table) {\n           $table->status = 0;\n           $table->time = '';\n           $table->save();\n        }\n\n        $Register->update_attributes($data);\n\n        Hold::delete_all(array(\n            'conditions' => array(\n                'register_id = ?',\n                $Register->id\n            )\n        ));\n        Posale::delete_all(array(\n            'conditions' => array(\n                'register_id = ?',\n                $Register->id\n            )\n        ));\n\n        $CI = & get_instance();\n        $CI->session->set_userdata('register', 0);\n\n        echo json_encode(array(\n            \"status\" => TRUE\n        ));\n    }\n\n    public function email()\n    {\n        $email = $this->input->post('email');\n        $content = $this->input->post('content');\n        $this->load->library('email');//carga la libreria email, antes configurar\n\n        $this->email->set_mailtype(\"html\");\n        $this->email->from('no-reply@' . $this->setting->companyname . '.com', $this->setting->companyname);\n        $this->email->to('$email');\n\n        $this->email->subject('Su recibo, Gracias por su compra');\n        $this->email->message($content);\n\n        $this->email->send();\n\n        echo json_encode(array(\n            \"status\" => TRUE\n        ));\n    }\n\n    public function pdfreceipt()\n    {\n        $content = $this->input->post('content');\n        $this->load->library('Pdf');\n        $pdf = new Pdf('P', 'mm', 'A4', true, 'UTF-8', false);\n        $pdf->SetTitle('Copia Boleta');\n        $pdf->SetHeaderMargin(30);\n        $pdf->SetTopMargin(20);\n        $pdf->setFooterMargin(20);\n        $pdf->SetAutoPageBreak(true);\n        $pdf->SetAuthor('AnthonCode');\n        $pdf->SetDisplayMode('real', 'default');\n        // agregar paginas\n        $pdf->AddPage();\n\n        $pdf->writeHTMLCell(0, 0, '', '', $content, 0, 1, 0, true, 'C', true);//L=left C=center\n        ob_end_clean();\n        $pdf->Output('cookie.pdf', 'D');\n    }\n\n   /* public function pdfinvoice()\n    {\n        $content = $this->input->post('content');\n        $this->load->library('Pdf');\n        $pdf = new Pdf('P', 'mm', 'A4', true, 'UTF-8', false);\n        $pdf->SetTitle('Pdf');\n        $pdf->SetHeaderMargin(30);\n        $pdf->SetTopMargin(20);\n        $pdf->setFooterMargin(20);\n        $pdf->SetAutoPageBreak(true);\n        $pdf->SetAuthor('Author');\n        $pdf->SetDisplayMode('real', 'default');\n        $pdf->AddPage();\n\n        $pdf->writeHTMLCell(0, 0, '', '', $content, 0, 1, 0, true, '', true);\n        ob_end_clean();\n        $pdf->Output('pdfexample.pdf', 'D');\n    }*/\n\n    public function storewaitercash($id)\n    {\n      $waiters = Waiter::find('all', array('conditions' => array('store_id = ?', $id)));\n      $content = '';\n      foreach ($waiters as $waiter) {\n         $content .= '<div class=\"form-group\"><label for=\"CashinHand\"><u>'.$waiter->name.'</u> '.label(\"CashinHand\").'</label><input type=\"number\" step=\"any\" class=\"form-control\" id=\"waiterid\" waiter-id=\"'.$waiter->id.'\" placeholder=\"'.$waiter->name.' '.label(\"CashinHand\").'\" Required></div>';\n      }\n      echo $content;\n   }\n\n   public function WaiterName($num = null)\n   {\n      $waiterid = Hold::find('first', array(\n          'conditions' => array(\n             'number = ? AND register_id = ? AND table_id = ?',\n             $num,\n             $this->register,\n             $this->selectedTable\n          )\n      ))->waiter_id;\n      echo $waiterid;\n   }\n   public function changewaiterS()\n   {\n      $num = $this->input->post('num');\n      $id = $this->input->post('id');\n      $hold = Hold::find('first', array(\n          'conditions' => array(\n             'number = ? AND register_id = ? AND table_id = ?',\n             $num,\n             $this->register,\n             $this->selectedTable\n          )\n      ));\n      $hold->waiter_id = $id;\n      $hold->save();\n\n      echo json_encode(array(\n          \"status\" => TRUE\n      ));\n   }\n\n   public function CustomerName($num = null)\n   {\n      $customerid = Hold::find('first', array(\n          'conditions' => array(\n             'number = ? AND register_id = ? AND table_id = ?',\n             $num,\n             $this->register,\n             $this->selectedTable\n          )\n      ))->customer_id;\n      echo $customerid;\n   }\n   public function changecustomerS()\n   {\n      $num = $this->input->post('num');\n      $id = $this->input->post('id');\n      $hold = Hold::find('first', array(\n          'conditions' => array(\n             'number = ? AND register_id = ? AND table_id = ?',\n             $num,\n             $this->register,\n             $this->selectedTable\n          )\n      ));\n      $hold->customer_id = $id;\n      $hold->save();\n\n      echo json_encode(array(\n          \"status\" => TRUE\n      ));\n   }\n\n   public function ShowTicket($id)\n    {\n      //$id='43';\n        $sale = Sale::find('last');\n        $posales = Sale_item::find('all', array(\n            'conditions' => array(\n                'sale_id = ?',$sale->id,\n            )\n        ));\n\n        //diseÃ±o del ticket producto,cantidad y subtotal\n        //\n       $ticket = '<div class=\"col-md-12\">\n        <div class=\"text-center\">' . $this->setting->receiptheader . '</div>\n        <div style=\"clear:both;\">\n        <h4 class=\"text-center\">' . label(\"SaleNum\") . '.: ' . sprintf(\"%05d\", $sale->id) . '</h4> \n        <div style=\"clear:both;\"></div>\n        <span class=\"float-left\">' . label(\"Date\") . ': ' . $sale->created_at->format('d-m-Y') . '</span>\n        <div style=\"clear:both;\">\n        <span class=\"float-left\">' . label(\"Customer\") . ': ' . $sale->clientname . '</span>\n        <div style=\"clear:both;\"></div>\n        <table class=\"table\" cellspacing=\"0\" border=\"0\">\n        <thead><tr><th style=\"width:30px; font-weight:bold;\"><em>#</em></th>\n        <th style=\"width:180px; font-weight:bold;\">' . label(\"Product\") . '</th>\n        <th style=\"width:65px; font-weight:bold;\">' . label(\"Quantity\") . '</th>\n        <th style=\"width:85px; font-weight:bold;\">' . label(\"SubTotal\") . '</th>\n        </tr>\n        </thead><tbody>';\n\n        $i = 1;\n        foreach ($posales as $posale) {\n            $ticket .= '<tr><td style=\"text-align:center; width:30px;\">' . $i . '</td>\n            <td style=\"text-align:left; width:180px;\">' . $posale->name . '</td>\n            <td style=\"text-align:center; width:65px;\">' . $posale->qt . '</td>\n            <td style=\"text-align:right; width:85px; \">' . number_format((float)($posale->qt * $posale->price), $this->setting->decimals, '.', '') . ' ' . $this->setting->currency . '</td>\n            </tr>';\n            $i ++;\n        }\n\n        // barcode \n        $bcs = 'code128';\n        $height = 20;\n        $width = 3;\n        $ticket .= '</tbody></table>\n        <table class=\"table\" cellspacing=\"0\" border=\"0\" style=\"margin-bottom:8px; border-top:1px solid #000;\">\n        <tbody><tr><td style=\"text-align:left;\">' . label(\"TotalItems\") . '</td>\n        <td style=\"text-align:right; padding-right:1.5%;\">' . $sale->totalitems . '</td>\n        <td style=\"text-align:left; padding-left:1.5%;\">' . label(\"Total\") . '</td>\n        <td style=\"text-align:right;font-weight:bold;\">' . number_format((float)$sale->subtotal, $this->setting->decimals, '.', '') . ' ' . $this->setting->currency . '</td></tr>';\n        // if there is a discount it will be displayed\n        if (intval($sale->discount))\n            $ticket .= '<tr><td style=\"text-align:left; padding-left:1.5%;\"></td>\n        <td style=\"text-align:right;font-weight:bold;\"></td>\n        <td style=\"text-align:left;\">' . label(\"Discount\") . '</td>\n        <td style=\"text-align:right; padding-right:1.5%;font-weight:bold;\">' . $sale->discount . '</td>\n        </tr>';\n            // same for the order tax\n        if (intval($sale->tax))\n            $ticket .= '<tr><td style=\"text-align:left;\"></td>\n        <td style=\"text-align:right; padding-right:1.5%;font-weight:bold;\"></td>\n        <td style=\"text-align:left; padding-left:1.5%;\">' . label(\"tax\") . '</td>\n        <td style=\"text-align:right;font-weight:bold;\">' . $sale->tax . '</td></tr>';\n\n        $ticket .= '<tr>\n        <td colspan=\"2\" style=\"text-align:left; font-weight:bold; padding-top:5px;\">' . label(\"GrandTotal\") . '</td>\n        <td colspan=\"2\" style=\"border-top:1px dashed #000; padding-top:5px; text-align:right; font-weight:bold;\">' . number_format((float)$sale->total, $this->setting->decimals, '.', '') . ' ' . $this->setting->currency . '</td>\n        </tr><tr>';\n\n        $PayMethode = explode('~', $sale->paidmethod);\n        switch ($PayMethode[0]) {\n            case '1': // case tarjeta de credito //anulada\n                $ticket .= '<td colspan=\"2\" style=\"text-align:left; font-weight:bold; padding-top:5px;\">' . label(\"CreditCard\") . '</td>\n                <td colspan=\"2\" style=\"padding-top:5px; text-align:right; font-weight:bold;\">xxxx xxxx xxxx ' . substr($PayMethode[1], - 4) . '</td>\n                </tr><tr>\n                <td colspan=\"2\" style=\"text-align:left; font-weight:bold; padding-top:5px;\">' . label(\"CreditCardHold\") . '</td><td colspan=\"2\" style=\"padding-top:5px; text-align:right; font-weight:bold;\">' . $PayMethode[2] . '</td>\n                </tr>';\n                break;\n            case '2': // case ckeck\n                $ticket .= '<td colspan=\"2\" style=\"text-align:left; font-weight:bold; padding-top:5px;\">' . label(\"ChequeNum\") . '</td><td colspan=\"2\" style=\"padding-top:5px; text-align:right; font-weight:bold;\">' . $PayMethode[1] . '</td></tr>';\n                break;\n            default:\n                $ticket .= '<td colspan=\"2\" style=\"text-align:left; font-weight:bold; padding-top:5px;\">' . label(\"Paid\") . ' (' . label(\"Cash\") . ')</td><td colspan=\"2\" style=\"padding-top:5px; text-align:right; font-weight:bold;\">' . number_format((float)$sale->firstpayement, $this->setting->decimals, '.', '') . ' ' . $this->setting->currency . '</td></tr>';\n        }\n\n        $payements = Payement::find('all', array('conditions' => array('sale_id = ?', $id)));\n        if($payements){\n           $ticket .= '<tr>';\n          foreach ($payements as $pay) {\n             $PayMethode = explode('~', $pay->paidmethod);\n             switch ($PayMethode[0]) {\n                case '1': // case Credit Card\n                    $ticket .= '<td colspan=\"2\" style=\"text-align:left; font-weight:bold; padding-top:5px;\">' . label(\"CreditCard\") . ' (xxxx xxxx xxxx ' . substr($PayMethode[1], - 4) . ')</td><td colspan=\"2\" style=\"padding-top:5px; text-align:right; font-weight:bold;\">'. number_format((float)$pay->paid, $this->setting->decimals, '.', '') .' ' . $this->setting->currency . '</td></tr><tr><td colspan=\"2\" style=\"text-align:left; font-weight:bold; padding-top:5px;\">' . label(\"CreditCardHold\") . '</td><td colspan=\"2\" style=\"padding-top:5px; text-align:right; font-weight:bold;\">' . $PayMethode[2] . '</td></tr>';\n                    break;\n                case '2': // case ckeck\n                    $ticket .= '<td colspan=\"2\" style=\"text-align:left; font-weight:bold; padding-top:5px;\">' . label(\"ChequeNum\") . ' (' . $PayMethode[1] . ')</td><td colspan=\"2\" style=\"padding-top:5px; text-align:right; font-weight:bold;\">'.number_format((float)$pay->paid, $this->setting->decimals, '.', '').' ' . $this->setting->currency . '</td></tr>';\n                    break;\n                default:\n                    $ticket .= '<td colspan=\"2\" style=\"text-align:left; font-weight:bold; padding-top:5px;\">' . label(\"Paid\") . ' (' . label(\"Cash\") . ')</td><td colspan=\"2\" style=\"padding-top:5px; text-align:right; font-weight:bold;\">'. number_format((float)$pay->paid, $this->setting->decimals, '.', '') .' ' . $this->setting->currency . '</td></tr>';\n           }\n          }\n       } else{\n          $ticket .= '</tbody></table>';\n       }\n\n        $ticket .= '<div style=\"border-top:1px solid #000; padding-top:10px;\">\n        <span class=\"float-left\">' . $this->setting->companyname . '</span>\n        <span class=\"float-right\">' . label(\"Tel\") . ' ' . $this->setting->phone . '</span>\n        <div style=\"clear:both;\"><center><img style=\"margin-top:30px\" src=\"' . site_url('pos/GenerateBarcode/' . sprintf(\"%05d\", $sale->id) . '/' . $bcs . '/' . $height . '/' . $width) . '\" alt=\"' . $sale->id . '\" /></center><div class=\"text-center\" style=\"background-color:#bdc3c7;padding:5px;width:85%;color:#fff;margin:0 auto;border-radius:3px;margin-top:40px;\">' . $this->setting->receiptfooter . '</div>\n        </div>';\n\n        echo $ticket;\n    }\n\n   public function showticketKit($tableid)\n   {\n      $table = Table::find($tableid);\n      $tableN = $table->name;\n      $posales = Posale::find('all', array(\n        'conditions' => array(\n          'table_id = ?',\n          $tableid\n        )\n      ));\n      foreach ($posales as $posale) {\n        $d1 = new DateTime($posale->time);\n        $d2 = new DateTime($table->checked);\n        if($d1 < $d2){\n          $posale->time = 'y';\n        }else{\n          $posale->time = 'n';\n        }\n      }\n      $table->checked = date(\"Y-m-d H:i:s\");\n      $table->save();\n\n\n\n      $ticket = '<div class=\"col-md-12\"><div class=\"text-center\">' . $this->setting->receiptheader . '</div><div style=\"clear:both;\"><br><div style=\"clear:both;\"><div style=\"clear:both;\"><br><div style=\"clear:both;\">' . label(\"Table\") . ' :' . $tableN . '</span><div style=\"clear:both;\"><br><br><table class=\"table\" cellspacing=\"0\" border=\"0\"><thead><tr><th><em>#</em></th><th>' . label(\"Product\") . '</th><th>' . label(\"Quantity\") . '</th><th>' . label(\"SubTotal\") . '</th></tr></thead><tbody>';\n\n      $i = 1;\n      foreach ($posales as $posale) {\n           $ticket .= '<tr style=\"'.($posale->time == \"n\" ? 'background-color:#FFC0CB;' : '').'\"><td style=\"text-align:center; width:30px;\">' . $i . '</td><td style=\"text-align:left; width:180px;\">' . $posale->name . '<br><span style=\"font-size:12px;color:#666\">'.$posale->options.'</span></td><td style=\"text-align:center; width:50px;\">' . $posale->qt . '</td><td style=\"text-align:right; width:70px;font-size:14px; \">' . number_format((float)($posale->qt * $posale->price), $this->setting->decimals, '.', '') . ' ' . $this->setting->currency . '</td></tr>';\n           $i ++;\n      }\n\n      $ticket .= '</tbody></table>';\n\n\n      echo $ticket;\n   }\n\n   public function getoptions($id, $posale)\n   {\n      $options = Product::find($id)->options;\n      $options = trim($options, \",\");\n      $array = explode(',', $options); //split string into array seperated by ','\n      $poOptions = Posale::find($posale)->options;\n      $poOptions = trim($poOptions, \",\");\n      $array2 = explode(',', $poOptions); //split string into array seperated by ','\n      $result = '<div class=\"col-md-12\"><input type=\"hidden\" value=\"'.$posale.'\" id=\"optprd\"><select class=\"js-select-basic-multiple form-control\" multiple=\"multiple\" id=\"optionsselect\">';\n      foreach ($array as $value) {\n         $selected = '';\n         foreach ($array2 as $value2) { $selected = $value == $value2 ? 'selected=\"selected\"' : $selected;}\n         $result .= '<option value=\"'.$value.'\" '.$selected.'>'.$value.'</option>';\n      }\n      $result .= '</select></div>';\n      echo $result;\n   }\n\n   public function addposaleoptions()\n   {\n      $options = $this->input->post('options');\n      $posaleid = $this->input->post('posale');\n      $option = '';\n      foreach ($options as $value) {\n         $option .= $value.',';\n      }\n      $posale = Posale::find($posaleid);\n      $posale->options = $option;\n      $posale->time = date(\"Y-m-d H:i:s\");\n      $posale->save();\n\n      echo json_encode(array(\n          \"status\" => TRUE\n      ));\n   }\n\n   public function CloseTable()\n   {\n      Hold::delete_all(array(\n          'conditions' => array(\n              'table_id = ? AND register_id = ?',\n              intval($this->selectedTable),\n              $this->register\n          )\n      ));\n      Posale::delete_all(array(\n          'conditions' => array(\n             'table_id = ? AND register_id = ?',\n             intval($this->selectedTable),\n             $this->register\n          )\n      ));\n\n      if($this->selectedTable != '0h'){\n\n         $table = Table::find($this->selectedTable);\n            $table->status = 0;\n            $table->time = '';\n            $table->save();\n      }\n\n      $CI = & get_instance();\n      $CI->session->set_userdata('selectedTable', 0);\n\n      echo json_encode(array(\n          \"status\" => TRUE\n      ));\n   }\n}\n",
			"settings":
			{
				"buffer_size": 58677,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 59.0,
		"last_filter": "Package Control: INS",
		"selected_items":
		[
			[
				"Package Control: INS",
				"Package Control: Install Package"
			],
			[
				"Package Control: SFTP",
				"Package Control: Satisfy Dependencies"
			],
			[
				"colo",
				"Package Control: Enable Package"
			],
			[
				"install",
				"Package Control: Advanced Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"side",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 382.0
	},
	"console":
	{
		"height": 115.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/xampp/htdocs/cookie/instalar",
		"/C/xampp/htdocs/cookie/system/libraries"
	],
	"file_history":
	[
		"/C/xampp/htdocs/empresa/application/config/database.php",
		"/C/xampp/htdocs/cookie/instalar/index.php",
		"/C/xampp/htdocs/empresa/instalar/index.php",
		"/C/xampp/htdocs/cookie/application/config/database.php",
		"/C/xampp/htdocs/empresa/index.php",
		"/C/xampp/htdocs/borrar/index.php",
		"/C/xampp/htdocs/cookie/index.php",
		"/C/xampp/htdocs/borrar2/application/config/config.php",
		"/C/xampp/htdocs/borrar2/application/config/database.php",
		"/C/xampp/htdocs/cookie/application/config/routes.php",
		"/C/xampp/htdocs/SEVEN/application/config/routes.php",
		"/C/xampp/htdocs/borrar/application/config/database.php",
		"/C/xampp/htdocs/cookie/application/config/config.php",
		"/C/xampp/htdocs/borrar/application/config/config.php",
		"/C/xampp/htdocs/cookie/application/core/MY_Controller.php",
		"/C/xampp/htdocs/cookie/application/controllers/Dashboard.php",
		"/C/xampp/htdocs/cookie/application/core/MY_Loader.php",
		"/C/xampp/htdocs/borrar/application/controllers/dashboard.php",
		"/C/xampp/htdocs/borrar/application/core/MY_Controller.php",
		"/C/xampp/htdocs/cookie/sparks/php-activerecord/0.0.2/vendor/php-activerecord/lib/Connection.php",
		"/C/xampp/htdocs/borrar2/index.php",
		"/C/xampp/htdocs/empresa/application/config/config.php",
		"/C/xampp/htdocs/cookie/INSTALL_POS2",
		"/C/xampp/htdocs/cookie/reiciar instalador.txt",
		"/C/xampp/htdocs/cookie/tools/lib/spark/spark_cli.php",
		"/C/xampp/htdocs/cookie/instalar/includes/core_class.php",
		"/C/xampp/htdocs/cookie/instalar/includes/database_class.php",
		"/C/Users/antonio/AppData/Local/Temp/Rar$DI68.320/index.php",
		"/C/xampp/htdocs/cookie/INSTALL_POS",
		"/C/xampp/htdocs/cookie/.htaccess",
		"/C/Users/antonio/AppData/Local/Temp/Rar$DI30.320/INSTALL_POS",
		"/C/Users/antonio/AppData/Local/Temp/Rar$DI26.616/config.php",
		"/C/Users/antonio/AppData/Local/Temp/Rar$DI65.616/routes.php",
		"/C/Users/antonio/AppData/Local/Temp/Rar$DI76.912/routes.php",
		"/C/xampp/htdocs/cookie/instalar/config/database.php",
		"/C/xampp/htdocs/cookie/application/language/spanish/spanish_lang.php",
		"/C/xampp/htdocs/cookie/application/controllers/Pos.php",
		"/C/xampp/htdocs/cookie/application/controllers/Reports.php",
		"/C/xampp/htdocs/cookie/application/views/expence/edit.php",
		"/C/xampp/htdocs/cookie/application/index.html",
		"/C/xampp/htdocs/cookie/application/views/stats.php",
		"/C/xampp/htdocs/cookie/application/views/setting/setting.php",
		"/C/xampp/htdocs/cookie/assets/css/Style-Blue.css",
		"/C/xampp/htdocs/cookie/assets/css/Style-Cookie.css",
		"/C/xampp/htdocs/cookie/assets/css/Style-Dark.css",
		"/C/xampp/htdocs/cookie/assets/css/Style-Green.css",
		"/C/xampp/htdocs/cookie/assets/css/Style-Orange.css",
		"/C/xampp/htdocs/cookie/assets/css/Style-Pink.css",
		"/C/xampp/htdocs/cookie/assets/css/Style-Red.css",
		"/C/xampp/htdocs/cookie/assets/css/Style-Yellow.css",
		"/C/xampp/htdocs/cookie/application/views/layouts/login.php",
		"/C/xampp/htdocs/cookie/application/views/setting/modifyUser.php",
		"/C/xampp/htdocs/cookie/usuarios.txt",
		"/C/xampp/htdocs/cookie/application/views/stores/editTable.php",
		"/C/xampp/htdocs/cookie/files/products_csv.csv",
		"/C/xampp/htdocs/cookie/application/views/stores/tables.php",
		"/C/xampp/htdocs/cookie/application/controllers/Stores.php",
		"/C/xampp/htdocs/4avisos_vacio/app/js/validator.js",
		"/C/xampp/htdocs/4avisos_vacio/publicar-aviso.php",
		"/C/xampp/htdocs/cookie/application/views/waiter/edit.php",
		"/C/xampp/htdocs/cookie/application/views/waiter/view.php",
		"/C/xampp/htdocs/cookie/system/helpers/form_helper.php",
		"/C/xampp/htdocs/4avisos_vacio/app/js/bootstrapValidator.js",
		"/C/xampp/htdocs/cookie/application/views/pos.php",
		"/C/xampp/htdocs/cookie/application/views/sale.php",
		"/C/xampp/htdocs/cookie/application/controllers/Invoices.php",
		"/C/Users/antonio/Desktop/index.html",
		"/C/xampp/htdocs/cookie/application/libraries/Pdf.php",
		"/C/xampp/htdocs/cookie/application/controllers/Sales.php",
		"/C/xampp/htdocs/cookie/application/libraries/Tcpdf/Tcpdf_autoconfig.php",
		"/C/xampp/htdocs/cookie/application/libraries/Tcpdf/Tcpdf.php",
		"/C/xampp/htdocs/borrar/application/controllers/pos.php",
		"/C/xampp/htdocs/cookie/system/libraries/Email.php",
		"/C/xampp/htdocs/cookie/application/views/layouts/application.php",
		"/C/xampp/htdocs/cookie/application/controllers/Settings.php",
		"/C/xampp/htdocs/4avisos/include/class.user.php",
		"/C/xampp/htdocs/dorado/main/libraries/Email.php",
		"/C/xampp/htdocs/cookie/system/core/Loader.php",
		"/C/xampp/htdocs/cookie/assets/js/summernote.js",
		"/C/xampp/htdocs/cookie/mejorar.txt",
		"/C/xampp/htdocs/cookie/application/views/product/view.php",
		"/C/xampp/htdocs/cookie/teclado/css/keyboard-basic.css",
		"/C/xampp/htdocs/cookie/assets/css/bootstrap.css",
		"/C/xampp/htdocs/cookie/application/views/kitchen.php",
		"/C/xampp/htdocs/cookie/application/views/expence/view.php",
		"/C/Users/antonio/Desktop/entretenimiento.txt",
		"/C/Users/antonio/Desktop/paginas/(5) Megan Nicole - Inicio_files/yepHh7qoJpV.js",
		"/K/.Notes/mundo azul.txt",
		"/C/xampp/htdocs/borrar/application/views/layouts/application.php",
		"/C/xampp/htdocs/cookie/application/controllers/Waiters.php",
		"/C/xampp/htdocs/cookie/teclado/css/bootstrap.min.css",
		"/C/xampp/htdocs/cookie/application/views/supplier/edit.php",
		"/C/xampp/htdocs/cookie/application/controllers/Products.php",
		"/C/xampp/htdocs/borrar/application/views/waiter/view.php",
		"/C/xampp/htdocs/cookie/application/views/stores/view.php",
		"/C/xampp/htdocs/4avisos_vacio/perfil.php",
		"/C/xampp/htdocs/4avisos_vacio/avisos-venta.php",
		"/C/xampp/htdocs/cookie/assets/datatables/js/jquery.dataTables.min.js",
		"/C/xampp/htdocs/cookie/application/controllers/Expences_controller.php",
		"/C/xampp/htdocs/cookie/assets/js/app.js",
		"/C/xampp/htdocs/cookie/system/libraries/Upload.php",
		"/C/xampp/htdocs/cookie/system/language/english/upload_lang.php",
		"/C/xampp/htdocs/cookie/application/models/Combo_item.php",
		"/C/xampp/htdocs/cookie/application/models/Sale.php",
		"/C/xampp/htdocs/cookie/application/models/Sale_item.php",
		"/C/xampp/htdocs/cookie/application/controllers/Stats.php",
		"/C/xampp/htdocs/cookie/application/models/Customer.php",
		"/C/xampp/htdocs/cookie/alter table.txt",
		"/C/xampp/htdocs/cookie/application/views/customer/view.php",
		"/C/xampp/htdocs/cookie/Keyboard-master01/docs/layouts3.html",
		"/C/xampp/htdocs/cookie/Keyboard-master01/docs/layouts.html",
		"/C/xampp/htdocs/cookie/Keyboard-master01/docs/scramble.html",
		"/C/xampp/htdocs/cookie/assets/js/jquery.keyboard.extension-all.js",
		"/C/xampp/htdocs/cookie/Keyboard-master01/docs/navigate.html",
		"/C/xampp/htdocs/cookie/Keyboard-master01/docs/basic.html",
		"/C/xampp/htdocs/cookie/Keyboard-master01/docs/altkeys-popup.html",
		"/C/xampp/htdocs/cookie/Keyboard-master01/docs/extender.html",
		"/C/xampp/htdocs/wordpress/wp-content/themes/Newspaper/includes/wp_booster/td_ajax.php",
		"/C/Users/antonio/Desktop/Nueva carpeta/Newspaper/includes/wp_booster/td_ajax.php",
		"/C/Users/antonio/Desktop/wwww.sql",
		"/C/Users/antonio/Desktop/Nueva carpeta/Newspaperfff/includes/wp_booster/td_ajax.php",
		"/C/xampp/htdocs/cookie/assets/js/jquery.keyboard.js",
		"/C/xampp/htdocs/cookie/Keyboard-master01/dist/js/jquery.keyboard.js",
		"/D/Antonio/4avisos/Clasificados_4avisos_plugin/remplazar gratis en plugin/functions.php (moneda Bs)",
		"/D/Antonio/4avisos/Clasificados_4avisos_plugin/remplazar gratis en plugin/payments.php",
		"/D/Antonio/4avisos/Clasificados_4avisos_plugin/remplazar gratis en plugin/add-payment.php",
		"/C/xampp/htdocs/borrar/install/index.php",
		"/C/xampp/htdocs/cookie/Keyboard-master01/languages/es.js"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 92.0,
		"where_history":
		[
			"C:\\xampp\\htdocs\\cookie",
			"C:\\xampp\\htdocs\\cookie\\application",
			"C:\\xampp\\htdocs\\cookie\\application\\core",
			"C:\\xampp\\htdocs\\cookie\\application\\controllers",
			"C:\\xampp\\htdocs\\cookie",
			"C:\\xampp\\htdocs\\cookie\\application",
			"C:\\xampp\\htdocs\\cookie",
			"C:\\Users\\antonio\\Desktop\\Nueva carpeta\\Newspaper",
			"C:\\xampp\\htdocs\\wordpress\\wp-content\\themes\\Newspaper",
			"C:\\xampp\\htdocs\\cookie\\Keyboard-master01",
			"C:\\xampp\\htdocs\\cookie\\assets\\js",
			"C:\\xampp\\htdocs\\cookie",
			"C:\\xampp\\htdocs\\cookie\\assets\\js",
			"C:\\xampp\\htdocs\\cookie",
			"C:\\xampp\\htdocs\\cookie\\Keyboard-master01",
			"C:\\xampp\\htdocs\\cookie",
			"C:\\xampp\\htdocs\\4avisos_vacio\\centralpark",
			"C:\\xampp\\htdocs\\cookie",
			"C:\\xampp\\htdocs\\cookie\\application",
			"C:\\xampp\\htdocs\\cookie",
			"C:\\xampp\\htdocs\\SEVEN",
			"C:\\xampp\\htdocs\\SEVEN\\application",
			"C:\\xampp\\htdocs\\SEVEN",
			"C:\\xampp\\htdocs\\SEVEN\\application",
			"C:\\xampp\\htdocs\\SEVEN",
			"C:\\xampp\\htdocs\\SEVEN\\application",
			"C:\\xampp\\htdocs\\SEVEN",
			"C:\\xampp\\htdocs\\SEVEN\\application",
			"C:\\xampp\\htdocs\\SEVEN",
			"C:\\xampp\\htdocs\\SEVEN\\application",
			"C:\\xampp\\htdocs\\SEVEN",
			"C:\\xampp\\htdocs\\SEVEN\\application",
			"C:\\xampp\\htdocs\\SEVEN",
			"C:\\xampp\\htdocs\\SEVEN\\application",
			"C:\\xampp\\htdocs\\SEVEN"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"contin",
			"continau",
			"bien",
			"Error while saving settings to database",
			".sql",
			"install.sql",
			"sql",
			".sql",
			"companyname",
			"12",
			"Bien!",
			"bien!",
			"bien",
			"step=1",
			"crear",
			"extensio",
			"database",
			"default_controller",
			"'database'",
			"restotest",
			"welcome",
			"dash",
			"login",
			"install",
			"zarest_settings",
			"INSTALL_POS",
			"install",
			"instal",
			"instalar",
			"inst",
			"instal",
			"INSTALL_POS",
			"install",
			"instalar",
			"bodegas",
			"label(\"note\")",
			"\"note\"",
			"<?=label(\"note\");?>",
			"cerrar",
			"stock",
			"h3",
			".themesPick > input:checked + img",
			"submit",
			"edit",
			"delete",
			"StoreZones",
			"mesas",
			"Store",
			"Store Tables",
			"store",
			"enviar",
			"150x150px",
			"muta",
			"conmut",
			"img",
			"cookie.jpg",
			"styl",
			"alert",
			"form_open_multipart",
			"val_pub_emp",
			"txtidciudad",
			"valida",
			"pdf",
			"Custome",
			"?=",
			"label",
			"customer:",
			"customer :",
			"customer:",
			"customer",
			"ClientData",
			"case '1':",
			"table",
			"Customer",
			"ClientData",
			"label(\"Cu",
			"label(\"C",
			"label(\"customer\")",
			"label(\"Customer\")",
			"customer",
			"CUSTOMER",
			"THEA",
			"PDF",
			"printSection",
			"printSectionInvoice",
			"printSection",
			"printSectionInvoice",
			"invoice",
			"content",
			"pdfinvoice",
			"onClick",
			"content",
			"pdf",
			"onClick",
			"pdfreceipt",
			"invoic",
			"pdf",
			"invoi",
			"pdfinvoice",
			"pdf",
			"pdfreceipt",
			"thead>",
			"thea",
			"logo",
			"invoice",
			"$content",
			"printSectionInvoice",
			"content",
			".php",
			"tcpdf",
			"Tcpdf",
			"TCPDF",
			"startcolumn",
			"pdfinvoice",
			"pdfinvoice()",
			"pdfreceipt",
			"boleta",
			"startcolumn",
			"pdfre",
			"pdf",
			"font-size:40px;font-weight:600;padding:5px;background-color:#415472;color:#fff;",
			"startcolumn",
			"/files/Setting/",
			"base",
			"sett",
			"font-size:40px;font-weight:600;padding:5px;background-color:#415472;color:#fff;",
			"newline =",
			"newline"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Agregar",
			"#2980b9",
			"<html lang=\"es\">",
			"'user'",
			"'sv_user'",
			"'sv_banner'",
			"para instalar",
			"Necesario*",
			"#f39c12",
			"#f1c40f",
			"#3498db",
			"#2980b9",
			"#0C4EBC",
			"#0c4ebc",
			"#0a3781",
			"#0c4ebc",
			"#0a3781",
			"lesson",
			"#3498db",
			"#27AE60",
			"#e74c3c",
			"#f39c12",
			"#2980b9",
			"#e74c3c",
			"#337AB7",
			"#F1F1F1",
			"#5CB85C",
			"#e74c3c",
			"#d35400",
			"#f39c12",
			"#e74c3c",
			"#27ae60",
			"#2980b9",
			"#f1c40f",
			"#1B2631",
			"#27ae60",
			"#e74c3c",
			"#c0392b",
			"#f1c40f",
			"#e74c3c",
			"asc",
			"danger",
			"Raleway",
			"enero",
			"#F0B518",
			"#5CB85C",
			"#F0B518",
			"#D9534F",
			"#215C87",
			"#337ab7",
			"#2e6da4",
			"#337ab7",
			"#425F9B",
			"#E98D23",
			"#425F9B",
			"php",
			".php",
			"$_db",
			"#2c456e",
			"#293953",
			"#3c4d68",
			"#293953",
			"unset_userdata",
			"#EDB521",
			"#2196F3",
			"#ED3D38",
			"#42B542",
			"#EDB521",
			"#ED3D38",
			"pago",
			"ventas",
			"detalle_venta",
			"gastos",
			"ventas",
			"detalle_venta",
			"usuarios",
			"proveedores",
			"clientes",
			"camareros",
			"categoria_gastos",
			"categorias",
			"productos",
			"#293953",
			"<a>Final<p>",
			"<a>PÃ¡gina Web<p>",
			"<p>ConfiguraciÃ³n</p>",
			"<a>ConfiguraciÃ³n de la pÃ¡gina<p>",
			"<p>ConfiguraciÃ³n</p>",
			"<a>Base de datos<p>",
			"#4CAF50",
			"#F0F0F0",
			"#293953",
			"Ã‰xito !</p>",
			"<a>Bien<p>",
			"Requerimientos",
			"descripcion",
			"fecha_creacion",
			"hovereffect2",
			"#393F4C",
			"272B35",
			"#272B35",
			"redes_sociales",
			"docente_id",
			"sexo",
			"get_var_lenguaje",
			"var_lenguaje",
			"phra44se_id",
			"var_lenguaje",
			"calific",
			"grado",
			"coment",
			"num_de_cuarto",
			"dormitorio",
			"dia",
			"tiempo",
			"asignatura",
			"horario",
			"docente",
			"precio",
			"clase",
			"autor",
			"descripcion",
			"nombre",
			"libros",
			"fecha",
			"estudiante",
			"estado",
			"asistencia"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 835,
						"regions":
						{
						},
						"selection":
						[
							[
								835,
								835
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 58677,
						"regions":
						{
						},
						"selection":
						[
							[
								58677,
								58677
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 338.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 29.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 28.0
	},
	"pinned_build_system": "",
	"project": "cookie.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"das",
				"application\\controllers\\Dashboard.php"
			],
			[
				"my_co",
				"application\\core\\MY_Controller.php"
			],
			[
				"databa",
				"application\\config\\database.php"
			],
			[
				"connec",
				"sparks\\php-activerecord\\0.0.2\\vendor\\php-activerecord\\lib\\Connection.php"
			],
			[
				"data",
				"application\\config\\database.php"
			],
			[
				"datab",
				"instalar\\includes\\database_class.php"
			],
			[
				"confi",
				"application\\config\\config.php"
			],
			[
				"core",
				"instalar\\includes\\core_class.php"
			],
			[
				"databas",
				"instalar\\config\\database.php"
			],
			[
				"rou",
				"application\\config\\routes.php"
			],
			[
				"spani",
				"application\\language\\spanish\\spanish_lang.php"
			],
			[
				"spanis",
				"application\\language\\spanish\\spanish_lang.php"
			],
			[
				"spa",
				"application\\language\\spanish\\spanish_lang.php"
			],
			[
				"stores",
				"application\\controllers\\Stores.php"
			],
			[
				"login",
				"application\\views\\layouts\\login.php"
			],
			[
				"style",
				"assets\\css\\Style-Cookie.css"
			],
			[
				"spna",
				"application\\language\\spanish\\spanish_lang.php"
			],
			[
				"invoi",
				"application\\controllers\\Invoices.php"
			],
			[
				"invoice",
				"application\\controllers\\Invoices.php"
			],
			[
				"span",
				"application\\language\\spanish\\spanish_lang.php"
			],
			[
				"tcpdf",
				"application\\libraries\\Tcpdf\\Tcpdf.php"
			],
			[
				"tcpdf.php",
				"application\\libraries\\Tcpdf\\Tcpdf.php"
			],
			[
				"pos",
				"application\\controllers\\Pos.php"
			],
			[
				"settin",
				"application\\controllers\\Settings.php"
			],
			[
				"appli",
				"application\\views\\layouts\\application.php"
			],
			[
				"email",
				"system\\libraries\\Email.php"
			],
			[
				"config",
				"application\\config\\config.php"
			],
			[
				"cooki",
				"assets\\css\\Style-Cookie.css"
			],
			[
				"sp",
				"application\\language\\spanish\\spanish_lang.php"
			],
			[
				"my",
				"application\\core\\MY_Controller.php"
			],
			[
				"store",
				"application\\controllers\\Stores.php"
			],
			[
				"app",
				"assets\\js\\app.js"
			],
			[
				"stat",
				"application\\controllers\\Stats.php"
			],
			[
				"sta",
				"application\\views\\stats.php"
			],
			[
				"appl",
				"application\\views\\layouts\\application.php"
			],
			[
				"es",
				"teclado\\js\\es.js"
			],
			[
				"keybo",
				"Keyboard-master01\\keyboard.jquery.json"
			],
			[
				"waves.min.js",
				"assets\\js\\waves.min.js"
			],
			[
				"sales.",
				"application\\views\\stores\\tables.php"
			],
			[
				"cate",
				"application\\views\\categorie_expence\\edit.php"
			],
			[
				"stores.p",
				"application\\views\\stores\\modifyStore.php"
			],
			[
				"catego",
				"application\\controllers\\Categories.php"
			],
			[
				"ex",
				"application\\controllers\\Expences.php"
			],
			[
				"ticke",
				"application\\views\\back\\admin\\ticket_view.php"
			],
			[
				"seve",
				"seven.sql"
			],
			[
				"theme.c",
				"template\\front\\css\\theme.css"
			],
			[
				"active",
				"template\\back\\css\\activeit.min.css"
			],
			[
				"cur",
				"application\\views\\back\\admin\\curency_method.php"
			],
			[
				"ticket",
				"application\\views\\back\\admin\\ticket_view.php"
			],
			[
				"profile.php",
				"application\\views\\front\\user\\profile.php"
			],
			[
				"profile",
				"application\\views\\front\\user\\profile.php"
			],
			[
				".sql",
				"seven.sql"
			],
			[
				"brand_form.js",
				"template\\back\\js\\custom\\brand_form.js"
			],
			[
				"bran",
				"application\\views\\back\\admin\\brand_add.php"
			],
			[
				"footer_",
				"application\\views\\front\\footer\\footer_1.php"
			],
			[
				"curency",
				"application\\views\\back\\admin\\curency_method.php"
			],
			[
				"language_he",
				"application\\helpers\\language_helper.php"
			],
			[
				"util.",
				"application\\libraries\\stripe-php\\lib\\Util\\Util.php"
			],
			[
				"cahe",
				"system\\libraries\\Cache\\Cache.php"
			],
			[
				"session_redis",
				"system\\libraries\\Session\\drivers\\Session_redis_driver.php"
			],
			[
				"redis",
				"system\\libraries\\Cache\\drivers\\Cache_redis.php"
			],
			[
				"install",
				"application\\controllers\\Install.php"
			],
			[
				"theme-y",
				"template\\front\\css\\theme-yellow-1.css"
			],
			[
				"theme-ye",
				"template\\front\\theme-yellow-1.css"
			],
			[
				"theme-puer",
				"template\\front\\css\\theme-purple-1.css"
			],
			[
				"theme",
				"template\\front\\theme-purple-1.css"
			],
			[
				"footer",
				"application\\views\\back\\footer.php"
			],
			[
				"language_s",
				"application\\views\\back\\admin\\language_select.php"
			],
			[
				"managev",
				"application\\views\\back\\vendor\\manage_vendor.php"
			],
			[
				"font",
				"template\\front\\plugins\\fontawesome\\fonts\\fontawesome-webfont.svg"
			],
			[
				"display",
				"application\\views\\back\\admin\\sales_delivery_payment.php"
			],
			[
				"theme.css",
				"template\\front\\css\\theme.css"
			],
			[
				"dataase",
				"application\\config\\database.php"
			],
			[
				"home_sea",
				"application\\views\\front\\home\\home1\\advanced_search.php"
			],
			[
				"navigati",
				"application\\views\\back\\admin\\navigation.php"
			],
			[
				"navigatio",
				"template\\front\\css\\inc\\navigation.less"
			],
			[
				"hel",
				"application\\helpers\\language_helper.php"
			],
			[
				"helper",
				"application\\helpers\\language_helper.php"
			],
			[
				"navigat",
				"application\\views\\back\\admin\\navigation.php"
			],
			[
				"about",
				"about-us.html"
			],
			[
				"acti",
				"template\\back\\css\\activeit.min.css"
			],
			[
				"preload",
				"application\\views\\front\\preloader.php"
			],
			[
				"activet",
				"template\\back\\css\\activeit.min.css"
			],
			[
				"theme-purpl",
				"template\\front\\css\\theme-purple-1.css"
			],
			[
				"theme-pu",
				"template\\front\\theme-purple-1.css"
			],
			[
				"home",
				"application\\views\\back\\admin\\home_settings.php"
			],
			[
				"dash",
				"application\\views\\back\\admin\\dashboard.php"
			],
			[
				"index",
				"uploads\\index.html"
			],
			[
				"upgra",
				"assets\\templates\\upgrade.html"
			],
			[
				"upgrade",
				"resources\\views\\upgrade.blade.php"
			],
			[
				"auto",
				"vendor\\autoload.php"
			],
			[
				"autol",
				"bootstrap\\autoload.php"
			],
			[
				"schoex",
				"assets\\js\\schoex.js"
			],
			[
				"telin",
				"assets\\js\\intlTelInput.min.js"
			],
			[
				"sql",
				"storage\\app\\dbsql"
			],
			[
				"installc",
				"app\\Http\\Controllers\\InstallController.php"
			],
			[
				"blade",
				"resources\\views\\dashboard.blade.php"
			],
			[
				"purple",
				"assets\\css\\colors\\purple-dark.css"
			],
			[
				"sqll",
				"storage\\app\\dbsqlUpLang"
			],
			[
				"validat",
				"vendor\\laravel\\framework\\src\\Illuminate\\Validation\\Validator.php"
			],
			[
				"valida",
				"assets\\js\\validation.js"
			],
			[
				"route",
				"upload\\vendor\\symfony\\routing\\Router.php"
			],
			[
				"rout",
				"upload\\app\\Http\\routes.php"
			],
			[
				"logi",
				"upload\\resources\\views\\login.blade.php"
			],
			[
				"port",
				"upload\\assets\\plugins\\datatables-plugins\\i18n\\Portuguese-Brasil.lang"
			],
			[
				"defaul",
				"upload\\assets\\css\\colors\\default-dark.css"
			],
			[
				"default",
				"upload\\assets\\css\\colors\\default-dark.css"
			],
			[
				"defau",
				"upload\\assets\\css\\colors\\default-dark.css"
			],
			[
				"lan",
				"upload\\app\\Http\\Controllers\\LanguagesController.php"
			],
			[
				"lang",
				"upload\\app\\models\\languages.php"
			],
			[
				"",
				"untitled"
			],
			[
				"payme",
				"application\\models\\Payement.php"
			],
			[
				"swe",
				"assets\\css\\sweetalert.css"
			],
			[
				"setti",
				"application\\views\\setting\\setting.php"
			],
			[
				"dark",
				"assets\\css\\Style-Dark.css"
			],
			[
				"sale",
				"application\\models\\Sale.php"
			],
			[
				"stripe",
				"application\\third_party\\Stripe\\Stripe.php"
			],
			[
				"eng",
				"application\\language\\english\\english_lang.php"
			],
			[
				"sty",
				"assets\\css\\Style-Dark.css"
			],
			[
				"fon-a",
				"assets\\css\\font-awesome.min.css"
			],
			[
				"pr",
				"application\\controllers\\Products.php"
			],
			[
				"pro",
				"application\\models\\Product.php"
			],
			[
				"sotr",
				"application\\models\\Store.php"
			],
			[
				"cpa",
				"mvc\\views\\signin\\cpassword.php"
			],
			[
				"sett",
				"application\\views\\setting\\setting.php"
			],
			[
				"wav",
				"assets\\css\\waves.min.css"
			],
			[
				"produc",
				"application\\models\\Product.php"
			],
			[
				"categ",
				"application\\models\\Categorie_expence.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 209.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
